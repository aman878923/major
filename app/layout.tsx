import type { Metadata } from "next";
import localFont from "next/font/local";
import "./globals.css";
import Link from "next/link";

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <nav className="bg-red-300 flex justify-center py-4">
          <ul className="flex gap-6">
            <li><Link href="/">Home</Link></li>
            <li><Link href="/about">about</Link></li>
            <li><Link href="/product/123/">product</Link></li>

          </ul>
        </nav>
        {/* The children prop is a special prop in React that allows you to pass JSX elements as a prop to a component. This is useful when you want to render some content inside a component, but you don't want to hard-code the content inside the component. Instead, you can pass the content as a prop to the component. */}
        {children}
      </body>
    </html>
  );
}
